name: Tests

on:
  push:
    branches: [main, develop]
    paths:
      - '**.ts'
      - '**.vue'
      - '**.js'
      - 'tests/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [main, develop]
    paths:
      - '**.ts'
      - '**.vue'
      - '**.js'
      - 'tests/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        run: pnpm test:run

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results ðŸ§ª" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Unit tests completed" >> $GITHUB_STEP_SUMMARY

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: unit-tests
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate coverage report
        run: pnpm test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            
            let comment = '## ðŸ“Š Test Coverage Report\n\n';
            comment += '| File | Statements | Branches | Functions | Lines |\n';
            comment += '|------|------------|----------|-----------|-------|\n';
            
            for (const [file, data] of Object.entries(coverage)) {
              if (file !== 'total') {
                const fileName = file.replace(process.cwd() + '/', '');
                comment += `| ${fileName} | ${data.statements.pct}% | ${data.branches.pct}% | ${data.functions.pct}% | ${data.lines.pct}% |\n`;
              }
            }
            
            comment += `\n**Total Coverage:** ${coverage.total.lines.pct}%`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
        continue-on-error: true
