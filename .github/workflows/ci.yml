name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        run: pnpm test:run

      - name: Generate coverage report
        run: pnpm test:coverage
        continue-on-error: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            
            // VÃ©rifier si le fichier existe
            if (!fs.existsSync('./coverage/coverage-summary.json')) {
              console.log('No coverage report found');
              return;
            }
            
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            
            let comment = '## ðŸ“Š Test Coverage Report\n\n';
            comment += `**Total Coverage:** ${coverage.total.lines.pct}%\n\n`;
            comment += '| Metric | Coverage |\n';
            comment += '|--------|----------|\n';
            comment += `| Statements | ${coverage.total.statements.pct}% |\n`;
            comment += `| Branches | ${coverage.total.branches.pct}% |\n`;
            comment += `| Functions | ${coverage.total.functions.pct}% |\n`;
            comment += `| Lines | ${coverage.total.lines.pct}% |\n`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint || echo "Linting not configured yet"
        continue-on-error: true
